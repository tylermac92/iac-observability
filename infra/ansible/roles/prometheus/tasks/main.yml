- name: Create directories
  file:
    path: "{{ prometheus_dir }}/{{ item }}"
    state: directory
    owner: root
    mode: "0755"
  loop:
    - bin
    - data

- name: Download prometheus tarball
  get_url:
    url: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
    dest: /tmp/prom.tar.gz
    mode: "0644"

- name: Extract prometheus binaries
  unarchive:
    src: /tmp/prom.tar.gz
    dest: "{{ prometheus_dir }}/bin"
    remote_src: yes
    extra_opts: [--strip-components=1]

- name: Template prometheus configuration
  template:
    src: prometheus.yml.j2
    dest: /opt/prometheus/bin/prometheus.yml
    mode: "0644"
  notify: restart prometheus

- name: Copy prometheus systemd unit
  copy:
    dest: /etc/systemd/system/prometheus.service
    content: |
      [Unit]
      Description=Prometheus
      After=network.target
      [Service]
      ExecStart={{ prometheus_dir }}/bin/prometheus --config.file={{ prometheus_dir }}/bin/prometheus.yml --storage.tsdb.path={{ prometheus_dir }}/data
      Restart=always
      [Install]
      WantedBy=multi-user.target
  notify: restart prometheus

- name: Download node exporter
  get_url:
    url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
    dest: /tmp/node.tar.gz
    mode: "0644"

- name: Extract node exporter
  unarchive:
    src: /tmp/node.tar.gz
    dest: /usr/local/bin
    remote_src: yes
    extra_opts: [--strip-components=1]

- name: Node exporter systemd unit
  copy:
    dest: /etc/systemd/system/node_exporter.service
    content: |
      [Unit]
      Description=Node Exporter
      After=network.target
      [Service]
      ExecStart=/usr/local/bin/node_exporter
      Restart=always
      [Install]
      WantedBy=multi-user.target
  notify: restart node_exporter

- name: Create CloudWatch Exporter directories
  file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - /opt/cloudwatch_exporter
    - /opt/cloudwatch_exporter/config

- name: Install Java runtime for Cloudwatch Exporter
  become: true
  yum:
    name:
      - java-17-amazon-corretto-headless
    state: present

- name: Download CloudWatch Exporter JAR
  get_url:
    url: https://repo1.maven.org/maven2/io/prometheus/cloudwatch/cloudwatch_exporter/{{ cloudwatch_exporter_version }}/cloudwatch_exporter-{{ cloudwatch_exporter_version }}-jar-with-dependencies.jar
    dest: /opt/cloudwatch_exporter/cloudwatch_exporter.jar
    mode: "0755"
  notify: restart prometheus

- name: Template CloudWatch exporter config
  template:
    src: cloudwatch_exporter.yml.j2
    dest: /opt/cloudwatch_exporter/config/config.yml
    mode: "0644"
  notify: restart prometheus

- name: Create systemd unit for cloudwatch exporter
  copy:
    dest: /etc/systemd/system/cloudwatch_exporter.service
    owner: root
    mode: "0644"
    content: |
      [Unit]
      Description=Prometheus CloudWatch Exporter
      After=network.target

      [Service]
      Type=simple
      ExecStart=/usr/bin/java -jar /opt/cloudwatch_exporter/cloudwatch_exporter.jar 9106 /opt/cloudwatch_exporter/config/config.yml
      Restart=always

      [Install]
      WantedBy=multi-user.target
  notify:
    - reload systemd
    - restart cloudwatch exporter

- name: Enable and start cloudwatch exporter
  systemd:
    name: cloudwatch_exporter
    enabled: yes
    state: started
  tags: prometheus

- name: Copy alert rules
  copy:
    src: alert-rules/
    dest: "{{ prometheus_dir }}/rules/"
    owner: root
    mode: "0644"
  notify: restart prometheus
