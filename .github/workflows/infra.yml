name: infra

on:
  push:
    paths:
      - "infra/**"
      - ".github/workflows/infra.yml"

env:
  TF_IN_AUTOMATION: true
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  terraform-apply:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      # 1. Checkout
      - uses: actions/checkout@v4

      # 2. Install Terraform
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.4

      # 3. Configure AWS creds
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      # 4. Terraform init (reads backend.tf in live/dev)
      - name: Terraform init
        working-directory: infra/terraform/live/dev
        run: terraform init -input=false -no-color

      # 5. Ensure default workspace
      - name: Select default workspace
        working-directory: infra/terraform/live/dev
        run: terraform workspace select default || terraform workspace new default

      # 6. Terraform plan
      - name: Terraform plan
        working-directory: infra/terraform/live/dev
        run: terraform plan -out=tfplan

      # 7. Terraform apply (only on main)
      - name: Terraform apply
        if: github.ref == 'refs/heads/main'
        working-directory: infra/terraform/live/dev
        run: terraform apply -input=false -auto-approve tfplan

      # 8. Export TF outputs (clean JSON → jq → $GITHUB_OUTPUT)
      - name: Export TF outputs
        id: tfout
        working-directory: infra/terraform/live/dev
        run: |
          CLEAN_JSON=$(terraform output -json | grep -vE '^(::|\[command\])')
          public_ip=$(echo "$CLEAN_JSON" | jq -r '.monitor_public_ip.value')
          key_path=$(echo "$CLEAN_JSON" | jq -r '.ssh_private_key_path.value')
          echo "public_ip=${public_ip}" >> "$GITHUB_OUTPUT"
          echo "key_path=${key_path}"   >> "$GITHUB_OUTPUT"

      - name: Copy SSH key into ansible folder
        run: |
          SRC="infra/terraform/live/dev/monitor_key.pem"
          mkdir -p infra/ansible
          cp "$SRC" infra/ansible/monitor_key.pem
          chmod 0600 infra/ansible/monitor_key.pem

      # 9. Generate Ansible inventory from outputs
      - name: Generate inventory
        working-directory: infra/ansible
        run: |
          echo "all:" > inventory.yml
          echo "  hosts:" >> inventory.yml
          echo "    monitor-node:" >> inventory.yml
          echo "      ansible_host: ${{ steps.tfout.outputs.public_ip }}" >> inventory.yml
          echo "      ansible_user: ec2-user" >> inventory.yml
          echo "      ansible_ssh_private_key_file: monitor_key.pem" >> inventory.yml
          echo "Generated inventory:"
          cat inventory.yml

      # 10. Install Ansible & jq
      - name: Install Ansible and jq
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ansible jq

      # 11. Run the Ansible playbook
      - name: Run Ansible playbook
        working-directory: infra/ansible
        run: ansible-playbook playbooks/site.yml
